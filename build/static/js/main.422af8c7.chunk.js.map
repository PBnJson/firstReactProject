{"version":3,"sources":["components/UsernameForm.js","components/UsernameList.js","App.js","index.js"],"names":["UsernameForm","props","useState","enteredUsername","setEnteredUsername","userAge","setUserAge","className","onSubmit","event","preventDefault","userData","username","age","onAddUser","for","value","onChange","target","type","placeholder","UsernameList","name","years","INITIAL_DATA","id","App","users","setUsers","oneUser","Math","random","toString","console","log","prevUsers","map","user","ReactDOM","createRoot","document","getElementById","render"],"mappings":"wRAuDeA,EAnDM,SAACC,GAElB,MAA8CC,mBAAS,IAAvD,mBAAOC,EAAP,KAAwBC,EAAxB,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAuBA,OACI,qBAAKC,UAAU,gBAAf,SACI,uBAAMA,UAAU,gBAAgBC,SAbnB,SAACC,GAClBA,EAAMC,iBAEN,IAAMC,EAAW,CACbC,SAAUT,EACVU,IAAKR,GAETJ,EAAMa,UAAUH,GAChBP,EAAmB,IACnBE,EAAW,KAIP,UACI,sBAAKC,UAAU,mBAAf,UACI,uBAAOQ,IAAI,QAAX,SAAmB,2CACnB,uBACA,uBAAOC,MAAOb,EAAiBc,SAzBvB,SAACR,GACrBL,EAAmBK,EAAMS,OAAOF,QAwBsCG,KAAK,OAAOC,YAAY,sBAGtF,sBAAKb,UAAU,mBAAf,UACI,uBACA,uBAAOQ,IAAI,MAAX,SAAiB,6CACjB,uBACA,uBAAOC,MAAOX,EAASY,SA5Bb,SAACR,GACvBH,EAAWG,EAAMS,OAAOF,QA2BwCG,KAAK,SAASC,YAAY,cAC9E,qBAAKb,UAAU,gBAAf,SACI,wBAAQY,KAAK,SAASZ,UAAU,aAAhC,iCC9BTc,G,MAZM,SAACpB,GAClB,IAAIqB,EAAOrB,EAAMW,SACbW,EAAQtB,EAAMY,IAElB,OACI,qBAAKN,UAAU,WAAf,SAEI,8BAAIe,EAAJ,OAAcC,EAAd,eCNNC,EAAe,CACnB,CACEC,GAAI,IACJ,SAAY,OACZ,IAAO,MAET,CACEA,GAAI,IACJ,SAAY,SACZ,IAAO,MAET,CACEA,GAAI,IACJ,SAAY,SACZ,IAAO,MAET,CACEA,GAAI,IACJ,SAAY,WACZ,IAAO,KAET,CACEA,GAAI,IACJ,SAAY,MACZ,IAAO,KAET,CACEA,GAAI,IACJ,SAAY,OACZ,IAAO,OAiCIC,MA7Bf,WACE,MAA0BxB,mBAASsB,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAeA,OACE,sBAAKrB,UAAU,oBAAf,UACE,oDACA,cAAC,EAAD,CAAcO,UAfK,SAAAe,GACrB,IAAMlB,EAAQ,2BACTkB,GADS,IAEZJ,GAAIK,KAAKC,SAASC,aAEpBC,QAAQC,IAAIvB,GAEZiB,GAAS,SAAAO,GACP,MAAM,CAAExB,GAAR,mBAAqBwB,UAQpBR,EAAMS,KAAI,SAACC,GAAD,OACT,cAAC,EAAD,CACEzB,SAAUyB,EAAKzB,SACfC,IAAKwB,EAAKxB,aCtDPyB,IAASC,WAAWC,SAASC,eAAe,SACpDC,OAAO,cAAC,EAAD,O","file":"static/js/main.422af8c7.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport './UsernameForm.css';\r\n// import AddUserButton from './AddUserButton';\r\n\r\nconst UsernameForm = (props) => {\r\n    // OTHER THAN IT BEING CONFUSING, COULD I NAME IT username, setUsername or does it need to be different from the username in props.username?\r\n    const [enteredUsername, setEnteredUsername] = useState('');\r\n    const [userAge, setUserAge] = useState('');\r\n\r\n\r\n\r\n    const usernameHandler = (event) => {\r\n        setEnteredUsername(event.target.value);\r\n    }\r\n\r\n    const ageInYearsHandler = (event) => {\r\n        setUserAge(event.target.value);\r\n    }\r\n\r\n    const clickHandler = (event) => {\r\n        event.preventDefault();\r\n        // SHOULD I NAME THIS THE SAME THING AS ABOVE, userAge AND enteredUsername??\r\n        const userData = {\r\n            username: enteredUsername,\r\n            age: userAge\r\n        }\r\n        props.onAddUser(userData);\r\n        setEnteredUsername('');\r\n        setUserAge('');\r\n    }\r\n    return (\r\n        <div className='userContainer'>\r\n            <form className=\"userform name\" onSubmit={clickHandler}>\r\n                <div className=\"nameAgeContainer\">\r\n                    <label for=\"uname\"><b>Username</b></label>\r\n                    <br></br>\r\n                    <input value={enteredUsername} onChange={usernameHandler} type='text' placeholder=\"Enter Username\" />\r\n\r\n                </div>\r\n                <div className=\"nameAgeContainer\">\r\n                    <br></br>\r\n                    <label for=\"age\"><b>Age(Years)</b></label>\r\n                    <br></br>\r\n                    <input value={userAge} onChange={ageInYearsHandler} type='number' placeholder=\"Enter Age\" />\r\n                    <div className=\"addUserButton\">\r\n                        <button type='submit' className=\"userButton\">Add User</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n        // {/* <AddUserButton /> */}\r\n    )\r\n\r\n}\r\n\r\nexport default UsernameForm;","import React from \"react\";\r\nimport './UsernameList.css';\r\n\r\nconst UsernameList = (props) => {\r\n    let name = props.username;\r\n    let years = props.age;\r\n    //  HOW DO I RETURN THE userData here??\r\n    return (\r\n        <div className=\"userList\">\r\n\r\n            <p>{name} is {years} old.</p>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default UsernameList;","import React, { useState } from 'react';\nimport UsernameForm from './components/UsernameForm';\nimport UsernameList from './components/UsernameList';\n\nconst INITIAL_DATA = [\n  {\n    id: '1',\n    'username': 'Josh',\n    'age': '39'\n  },\n  {\n    id: '2',\n    'username': 'Jayden',\n    'age': '11'\n  },\n  {\n    id: '3',\n    'username': 'Amelia',\n    'age': '17'\n  },\n  {\n    id: '4',\n    'username': 'Isabella',\n    'age': '7'\n  },\n  {\n    id: '5',\n    'username': 'Mia',\n    'age': '5'\n  },\n  {\n    id: '5',\n    'username': 'Didi',\n    'age': '30'\n  }\n];\n\nfunction App() {\n  const [users, setUsers] = useState(INITIAL_DATA);\n\n\n  const addUserHandler = oneUser => {\n    const userData = {\n      ...oneUser,\n      id: Math.random().toString()\n    }\n    console.log(userData);\n\n    setUsers(prevUsers => {\n      return [userData, ...prevUsers]\n    });\n  };\n\n  return (\n    <div className='allUsersContainer'>\n      <h1>Enter Name And Age</h1>\n      <UsernameForm onAddUser={addUserHandler} />\n      {users.map((user) =>\n        <UsernameList\n          username={user.username}\n          age={user.age} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}